definitions:
  models.Response:
    properties:
      error:
        type: string
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      id:
        example: 1
        type: integer
      title:
        type: string
    type: object
  models.TodoIn:
    properties:
      completed:
        type: boolean
      title:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: Welcome
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Welcome
      tags:
      - healths
  /todos:
    get:
      consumes:
      - application/json
      description: Welcome
      parameters:
      - description: name search by q
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
      summary: Welcome
      tags:
      - Todos
    post:
      consumes:
      - application/json
      parameters:
      - description: Todo ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoIn'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: CREATE TODO
      tags:
      - Todos
  /todos/{todo_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Todo ID
        in: path
        name: todo_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get todo by id
      tags:
      - Todos
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
